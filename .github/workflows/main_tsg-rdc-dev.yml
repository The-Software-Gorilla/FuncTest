name: Build and deploy dotnet core project to Azure Function App - tsg-rdc-dev

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'
  DOTNET_VERSION: '8.0.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: read     # <-- needed to read from GitHub Packages

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          
      - name: Verify credentials
        run: echo "GITHUB_TOKEN is set: ${{ secrets.GITHUB_TOKEN }}"

      # Add your org's GitHub Packages NuGet feed and authenticate with GITHUB_TOKEN
      - name: Configure GitHub Packages NuGet source
        run: |
          dotnet nuget add source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
            --name "github" \
            --username "${{ github.actor }}" \
            --password "${{ secrets.GITHUB_TOKEN }}" \
            --store-password-in-clear-text
          dotnet nuget list source

      - name: Restore
        working-directory: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        run: dotnet restore --verbosity minimal

      - name: Build
        working-directory: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        run: dotnet build --configuration Release --no-restore --output ./output

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_462FA1CB0B0B4FA6A89A3BA9E36B7C87 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_74D701571F144B6EB6C95C59BDA8E5A6 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_9D80DCF3D5AB42AA97B29AF0394836FC }}

      - name: Deploy to Azure Functions
        uses: Azure/functions-action@v1
        with:
          app-name: 'tsg-rdc-dev'
          slot-name: 'Production'
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'